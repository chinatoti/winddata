#
# Maximum aggregate transmission rate of all LBT-RU sessions original data for this particular context.
# Units: bits per second
# Default value: 10000000 (10 Mbps)
#
context transport_lbtru_data_rate_limit 10000000
#
# Maximum aggregate transmission rate of all LBT-RM sessions' original data plus retransmissions for this particular context.
# Units: bits per second
# Default value: 10000000 (10 Mbps)
#
context transport_lbtrm_data_rate_limit 10000000
#
# Maximum aggregate transmission rate of all LBT-RU sessions retransmissions for this particular context. 
# This should always be less than the value used for original data.
# Units: bits per second
# Default value: 5000000 (5 Mbps)
#
context transport_lbtru_retransmit_rate_limit 50000000
context transport_lbtrm_retransmit_rate_limit 50000000
#
# The mode in which UM operates to process events. 
# Refer to Embedded and Sequential Mode in the Ultra Messaging Concepts Guide for additional information
# embedded: LBM_CTX_ATTR_OP_EMBEDDED  A thread is spawned within UM to handle processing of events (timers and socket events). Default for all.
# sequential: LBM_CTX_ATTR_OP_SEQUENTIAL The application is responsible for calling lbm_context_process_events() to process events. Sequential mode does not support Multi-Transport Threads.
# The default for operational_mode is embedded
#
context operational_mode sequential
#TCP port
#request_tcp_port=14445
#
# After UM deletes a TCP response, 
# this is the timeout period after which UM closes the connection and reclaims its memory. 
# NOTE: When using Off-Transport Recovery, 
# this value must be longer than “ otr_request_maximum_interval (receiver) ” .
# Units: milliseconds
# Default value: 2000 (2 seconds)
#
context response_tcp_deletion_timeout 600000


#
# UM can be configured to create sources using the LBT-RM reliable
# multicast protocol instead of the default TCP.
#
source transport LBTRU


#
# The maximum time interval between a receiver's OTR lost-message requests.
# After the receiver initiates OTR and is waiting to receive the retransmission,
# the initial interval (set by “ otr_request_minimum_interval (receiver) ”) doubles in length for each request until it reaches this option's value,
# then continues at this interval (until timeout or UM recovers messages).
# NOTE: When using TCP Request/Response,
# this value must be shorter than “ response_tcp_deletion_timeout (context) ”.
# Units: milliseconds
# millisecondsDefault value: 10000 (10 seconds)
#
receiver otr_request_maximum_interval 10000

receiver ume_use_store 0
receiver use_late_join 0

